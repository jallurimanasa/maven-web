Q1 — Problem Statement Analysis (10 marks)1. AbstractThe Online Attendance Management System is designed to simplify the process of recording and monitoring student attendance. It allows students to mark their attendance digitally, provides teachers with the ability to view and update records, and automatically generates monthly attendance reports. This reduces manual paperwork, ensures accuracy, and saves time for both students and faculty.✅ Explanation: Abstract is a short summary of the whole system in your own words.2. Functional Requirements (What the system must do)Students should be able to log in and mark attendance.Teachers should be able to view, edit, and update attendance records.The system must generate monthly attendance reports.The system should allow exporting reports in PDF/Excel format.Admin should be able to add/remove students and teachers.✅ Explanation: Functional requirements are the features and functions the system should provide.3. Non-Functional Requirements (Quality of the system – how it should work)The system should be user-friendly and easy to navigate.The system must be secure, ensuring only authenticated users can access data.Attendance marking should take less than 2 seconds.The system should be scalable to support up to 5000 users at a time.The system should be available 24/7 with minimal downtime.✅ Explanation: Non-functional requirements describe performance, security, usability, scalability, reliability etc.4. UsersStudents – to mark attendance and view reports.Teachers – to view, update attendance, and generate reports.Admin – to manage users (students/teachers) and maintain the system.✅ Explanation: Users are who will use the system (end-users, admins, etc.).Q2:Step 1: Import the Project into Maven Environment (8 Marks)Launch Eclipse IDE for Enterprise Java Developers.Go to:File → Import → Git → Projects from Git (with smart import) → NextSelect Clone URI → Next.Enter the GitHub repository URL (HTTPS/SSH).Example:https://github.com/username/repository.gitSelect the required branch (usually main or master) → Next.Choose the directory where Eclipse will store the repo → Finish.Eclipse will automatically detect it as a Maven project and configure accordingly.✅ Explanation: This imports the project into Eclipse directly from GitHub.Step 2: Resolve Dependencies using pom.xml (7 Marks)create maven project->filter: org.apache.maven->maven-archetype-webapp 1.4->add artifactid->next->finishin pom.xml: 	<dependency> 	    <groupId>javax.servlet</groupId> 	    <artifactId>javax.servlet-api</artifactId> 	    <version>4.0.1</version> 	    <scope>provided</scope> 	</dependency>project folder clickmaven->cleanmaven->installmaven->testmaven->build (goals: clean install test)maven->run on serverORfor GitHub repo:In Eclipse, right-click on the project → Maven → Update Project.Select your project → click OK.Maven will read the pom.xml file and download all dependencies from the Maven repository.Verify under Maven Dependencies in Eclipse whether required JARs are loaded.Step 3: Build the Project to Generate WAR/JAR (10 Marks)already created by above stepsOROpen a terminal in your project’s root folder.Run: mvn clean installStep 4: Verify Generated Artifact(WAR file) in target/ Foldertarget/my-web-app.warQ3:git initlsgit add .git commit -m "Maven project"git config --global user.name "Your Name"git config --global user.email "your.email@example.com"git config --listgit remote add origin https://github.com/username/my-web-app.gitgit push -u origin masterQ4:Create a Dockerfile.# Use Tomcat 9 as base imageFROM tomcat:9.0# Copy your built WAR into Tomcat’s webapps folderCOPY target/my-web-app.war /usr/local/tomcat/webapps/ROOT.warEXPOSE 8080# Start TomcatCMD ["catalina.sh", "run"]Step 2: Build the Docker ImageIn project root (where Dockerfile exists):docker build -t my-web-app .Step 3: Push to Docker HubLogin to Docker Hub:docker loginTag image for Docker Hub:docker tag my-web-app username/my-web-appPush image**:**docker push username/my-web-app:1.0ORdocker tag my-web-app username/my-web-app:latestdocker push username/my-web-app:latestQ5:Step 1:create docker-compose.yml Fileversion: "3.8"services:  web:    image: username/my-web-app:latest   # image you pushed to Docker Hub    ports:      - "8080:8080"    # expose web app    depends_on:      - db             # ensures DB starts firstdb:    image: mysql:8.0    container_name: mydb    environment:      MYSQL_ROOT_PASSWORD: root      MYSQL_DATABASE: myappdb      MYSQL_USER: appuser      MYSQL_PASSWORD: apppass    ports:      - "3306:3306"    volumes:      - db_data:/var/lib/mysqlvolumes:  db_data:Step 2: Run Services TogetherStart both containers:docker-compose up -dStop and remove:docker-compose downStep 3: Verify Setup (2 Marks)Open browser → http://localhost:8080 → Web app should load.MySQL accessible on port 3306.SBQ:SBQ:Create a Branchgit branch feature-uigit checkout feature-uiMerge Branch into Maingit checkout maingit merge feature-uiMerges feature branch into main.Revert a Commitgit log --oneline   # find commit IDgit revert <commit-id>Creates a new commit that undoes changes from the given commit.Scenario based questions on basic git commands1. You made changes to one file in the above project but haven’t staged them yet. You realize they were a mistake. What Git command will you use to discard the local changes?2. You accidentally ran git add file1.txt (note instead of file.txt consider one file from above project), but you’re not ready to commit yet. How do you remove it from the staging area without losing the changes?3.  You made a commit but typed the wrong commit message. You haven’t pushed it yet. How do you fix it?4. You want to view the commit history of the current branch in a readable format. What Git command should you use?5. After cloning a repo, how can you set your name and email globally for all Git repositories?6. You’ve made some edits to your files but haven’t staged them. How can you view the changes?7. You’re on the main branch but need to switch to feature/login. What command do you8. You deleted the feature-ui branch by mistake. You haven’t pushed the deletion. How9. You’ve made some commits locally and now want to upload them to the remote repository. What do you run?10. How can you fetch the latest changes from the remote repository without merging them automatically?11. You’re on the main branch and want to start working on a new feature called search-filter. What command do you use?12. You committed a file containing an API key and want to completely remove it from the repo's history. What should you do?13. You want to see all the branches that exist both locally and on the remote. What14. You’re on main and want to merge the completed feature/signup branch into it. What command do you use?15. You tried to merge two branches and Git reported a conflict in app.js. What are the general steps to resolve it?16. You don’t want Git to track changes to .log files or node_modules/. How do you achieve this?17. You're investigating a bug and want to know who last changed line 25 in script.py. What command do you use?18. You’re in the middle of working on a file but need to switch branches quickly. What do you do to save your work?19. You previously ran git stash and now want to restore those changes. What command do you use?20. The feature/test branch is no longer needed. How do you delete it locally?21. You just merged the feature-ui branch into main. You want to clean up your local branches. How do you safely delete feature-ui?22. You created a branch feature-experiment, made some changes, but now realize the code is no longer needed. You want to delete it, even though it hasn’t been merged. What command will you use?23. You're currently on the feature-login branch and want to delete feature-ui. What must you ensure before running the delete command?24. You want to delete bugfix-footer, but you're unsure if it's been merged. What should you do before deleting it?25. You finished working on feature-a, feature-b, and feature-c. All have been merged into main. How do you delete them in one command?Scenario based questions on working with remote repository using Git commands1. Specify the git command when you're starting work on a project and need to clone a remote repository to your local machine.2. Specify the git command if you want to see the remotes that are connected to your local repository.3. Specify the git command if you want to add a new remote repository to your local repository.4. Specify the git command to remove a remote repository from your local configuration:5. Specify the git command if you want to rename an existing remote:6. Specify the git command to fetch updates from the remote repository but not merge them into your local branch.7. Specify the git command to pull the latest changes from the remote repository and merge them into your local branch.8. Specify the git command to push your local commits to a remote repository.9. Specify the git command to when pushing for the first time and want to set the remote branch you are pushing to.10. Specify the git command to change the URL of a remote (e.g., after changing the remote repository address).11. Specify the git command if you want to list all branches on the remote repository.12. Specify the git command if a branch was deleted on the remote but still shows up locally.13. Specify the git command to fetch a specific branch from a remote.14. Specify the git command if you want to see detailed information about a remote repository.15. Specify the git command if you want to rebase your local branch onto a remote branch (this can be useful to keep your history linear)Answers:1.git checkout -- <filename>2.git reset HEAD <file1.txt>3.git commit --amend4.git log --oneline5.git config --global user.name "Your Name" and git config --global user.email "you@example.com"6.git diff7.git switch feature/login (or) git checkout feature/login8.git checkout -b feature-ui (if the branch existed locally before deletion and reflog/history still exists)9.git push10.git fetch11.git switch -c search-filter (or) git checkout -b search-filter12.git filter-repo --path <filename> --invert-paths13.git branch -a14.git merge feature/signup15.Open the file, manually resolve the conflict, run git add app.js, then git commit16.Add them to .gitignore17.git blame script.py18.git stash19.git stash pop20.git branch -d feature/test21.git branch -d feature-ui22.git branch -D feature-experiment23.Ensure you're not on feature-ui; switch to another branch first.24.Run git branch --merged to check if it’s merged before deleting.25.git branch -d feature-a feature-b feature-cScenario-Based Remote Git Commands1.git clone <repo-url>2.git remote -v3.git remote add <name> <url>4.git remote remove <name>5.git remote rename <old-name> <new-name>6.git fetch7.git pull8.git push9.git push -u origin <branch-name>10.git remote set-url <name> <new-url>11.git branch -r12.git remote prune origin13.git fetch origin <branch-name>:<branch-name>14.git remote show <name>15.git pull --rebase origin <branch-name>4. Scenario based questions on working with remote repository1. You've cloned a repository and made some changes to a local branch. Now you want to push these changes to the remote repository, but you're getting an error saying "rejected - non-fast-forward." How would you resolve this?Ans: git pull --rebase origin branch_name# Resolve conflicts if anygit push origin branch_name👉 Use rebase to keep history clean.2.  You’ve been working on a feature branch, and now you need to push it to the remote repository. However, the remote repository already has a main branch. How do you push your feature branch without affecting the main branch?Ans:git checkout -b feature-branchgit push origin feature-branch👉 Remote will now have main + feature-branch separately.3. You cloned a remote repository, but after a while, the repository’s structure changed and new branches were added. How would you keep your local repository updated with the latest changes from the remote repository?Ans:git fetch --allgit pull origin main👉 fetch downloads new branches/tags, then pull updates working branch.4. A colleague has pushed some changes to the main branch, but you have local changes in the same branch. You want to pull their changes, but you want to avoid merge conflicts. What steps would you take?Ans:git stash           # Save local changesgit pull origin maingit stash pop       # Reapply your changes👉 Safer way to merge without conflicts.5. You accidentally pushed a sensitive file (e.g., API keys) to the remote repository. How would you fix this situation?Ans:git rm --cached secret.txtgit commit -m "Remove sensitive file"git push origin main👉 If it’s already in history:bashCopy codegit filter-branch --force --index-filter \'git rm --cached --ignore-unmatch secret.txt' \--prune-empty --tag-name-filter cat -- --allgit push origin --force --all👉 Also rotate API keys immediately.6. You’re working on a feature branch, and your manager requests that you integrate the latest changes from main into your feature branch. What steps would you take?Ans: git checkout feature-branchgit pull origin main👉 Brings main’s latest commits into your branch.7. You cloned a remote repository, but later you find that you need to push your changes to a different remote repository. How do you configure your local repository to push to this new remote?Ans: git remote set-url origin <new_repo_url>git push -u origin branch_name8. After running git pull, you notice that your local branch is behind the remote branch. How would you proceed to bring your local branch up to date without losing your local changes?Ans: git stashgit pull origin branch_namegit stash popORgit pull --rebase origin branch_name9. You’re working on a project with multiple collaborators, and you notice that your local changes conflict with changes that have been pushed by others. How would you resolve the conflicts?Ans: git add conflicted_filegit commitgit push origin branch_name10. You’ve pushed a feature branch to a remote repository, but now you need to delete the branch from the remote. How would you do that?Scenario:Ans: git push origin --delete feature-branchYou are working on a collaborative project hosted on GitHub with a team of four developers. The main branch is main, and each developer works on their own feature branches.You are assigned to implement a new UI component in a branch called feature/ui-update. Meanwhile, another team member has made a critical bug fix and pushed it directly to the main branch. When you try to push your changes, your push fails due to upstream changes.Additionally, a teammate has submitted a patch file with a small CSS fix and shared it via email. You need to apply the patch, test it, and merge everything into main without breaking any functionality.11. What command will you use to bring your local main branch up to date with the remote repository before merging it into your feature branch?Ans: git checkout maingit pull origin main12. How will you update your feature/ui-update branch to reflect the latest changes from main?Ans: git checkout feature/ui-updategit merge main👉 Or cleaner history:git rebase main13. Which command should you use to attempt pushing your local feature branch again, and what should you do if it fails due to conflicts?Ans:git push origin feature/ui-update👉 If it fails due to conflicts:bashCopy codegit pull --rebase origin main# resolve conflictsgit push origin feature/ui-update14. How do you apply a .patch file provided by your teammate and include it in your commit history?Ans: git apply fix.patchgit add .git commit -m "Applied CSS fix from patch file"👉 To preserve history directly from patch:git am fix.patch15. After successful testing, describe the steps (with commands) to merge your feature branch into main and push it to GitHub.give ansAns:git checkout maingit pull origin main          # ensure up to dategit merge feature/ui-update   # merge featuregit push origin mainMaven Exam Questions & Answers1.If my error is about:Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile[ERROR] -> [Help 1][ERROR] To see the full stack trace of the errors, re-run Maven with the -X switch.How can I resolve it using maven terminal?Ans:mvn clean install -XAdd plugin in pom.xml:<plugin>  <groupId>org.apache.maven.plugins</groupId>  <artifactId>maven-compiler-plugin</artifactId>  <version>3.8.1</version>  <configuration>    <source>1.8</source>    <target>1.8</target>  </configuration></plugin>👉 Ensure correct JDK version is installed.2.A dependency you added is not recognized by the compiler. What steps would you take to confirm it is available in .m2 and listed in dependency tree?Ans:ls ~/.m2/repository/groupId/artifactId/versionmvn dependency:treemvn dependency:resolve3.A teammate sends a .patch file for a bug fix. How would you apply it and include it in your Maven build?Ans:git apply bugfix.patchgit add .git commit -m "Applied bug fix from patch"mvn clean install4.You have multiple JUnit test failures and want to rerun only failed tests. How would you approach this?Ans:mvn test -Dsurefire.rerunFailingTestsCount=15.Your Maven build fails due to “Unsupported class version error.” What plugin and configuration would you review?Ans:<maven-compiler-plugin>  <configuration>    <source>17</source>    <target>17</target>  </configuration></maven-compiler-plugin>6.You need to change your Java application from a WAR to a standalone JAR. What pom.xml changes are needed?Ans:In pom.xml:<packaging>jar</packaging>Remove web dependencies (javax.servlet) if not needed.7.You are required to change the default build output directory from target/ to build_output/. How would you configure it?Ans:<build>  <directory>build_output</directory></build>8.How would you generate a site report (with test coverage, dependency analysis) for a Maven project?Ans:mvn sitePlugins like maven-project-info-reports-plugin, jacoco-maven-plugin for coverage.Output: target/site/index.html.9.How do you build a Java project using Maven, and what files are generated in the target/ folder after running mvn clean install?Ans:mvn clean installtarget/ will contain:classes/ (compiled classes)test-classes/ (compiled test classes)project-version.jar/warsurefire-reports/10.How does Maven resolve dependency conflicts when two libraries use different versions of the same dependency, and how can you view and manage the dependency tree?Ans:Maven uses “nearest definition” rule.Check conflicts:mvn dependency:treemvn dependency:analyzeForce version:<dependencyManagement>  <dependencies>    <dependency>      <groupId>group</groupId>      <artifactId>artifact</artifactId>      <version>1.2.3</version>    </dependency>  </dependencies></dependencyManagement>11.How do you write and run a JUnit test in a Maven project, and where are the compiled test classes and reports stored after running mvn test?Ans:mvn test13.How do you install and use a custom third-party JAR file in your Maven project, and how can you confirm it’s included in the build and classpath?Ans:mvn install:install-file -Dfile=custom.jar -DgroupId=com.custom -DartifactId=myLib -Dversion=1.0 -Dpackaging=jar14.How do you create a Maven web project that packages into a WAR file, and what is the standard folder structure for such a project?Ans:<packaging>war</packaging>15.What command do you use to build a WAR file in Maven, where is it generated, and how can you deploy it to a server like Apache Tomcat?Ans:mvn clean package17.How do you configure a Maven web project, and how does its packaging and execution differ from a traditional WAR-based application?Ans:Packaging: <packaging>war</packaging>Executed on Servlet Container (Tomcat, Jetty), unlike standalone JAR.WAR includes web resources under src/main/webapp.Scenario based Questions:1.Your application is running inside Docker, but you’re not sure if the container is active.Which command helps you check running containers?Ans:docker ps2. You notice one of your containers is consuming high CPU and want to stop it.How do you stop a running container named web_app?Ans:docker stop web_app3. You’ve written a Dockerfile in your project directory and want to build an image named myapi.What Docker CLI command do you use?Ans:docker build -t myapi .4. You want to run your web_app container and expose its internal port 5000 on host port 8080.Which command should you use?Ans:docker run -d -p 8080:5000 --name web_app myapi5. Your container is running, but you want to go inside and debug it using a shell. What CLI command helps you enter the container’s shell?Ans:docker exec -it web_app /bin/bash6. You’ve built a few test images and want to delete one called old_api. How would you do this?Ans:docker rmi old_api7. Your app crashed in the container. You need to check the logs. How do you check this?Ans:docker logs web_app8. You want to start a container and let it run in the background. Which command should you use?Ans:docker run -d myapi9. You're not sure which container is using port 3000. How do you check?Ans:docker ps --filter "publish=3000"10. You built an image but forgot to tag it. How do you tag it now?Ans:docker tag <image_id> myrepo/myapi:1.011. You want to export an image to a .tar file for offline transfer. How do you export it?Ans:docker save -o myapi.tar myapi:1.012. You want to restart a container automatically if it crashes. What Docker CLI command do you use?Ans:docker run -d --restart=always myapi13. You want to see how much CPU/RAM each container uses. What Docker CLI command do you use? How to Control or Limit RAM in Docker? How to Measure Actual Memory Usage?Ans:13. Check CPU/RAM usagedocker stats👉 Real-time usage per container.Limit RAM:docker run -m 512m --memory-swap 1g myapi👉 Limits memory to 512MB, swap max 1GB.Measure memory: Use docker stats or inspect container cgroups.14. You want your container to run a shell command before starting the app. What do you include in docker file?Ans:CMD ["sh", "-c", "echo 'Starting app...' && python app.py"]15. You want to create a custom Nginx image with your static files. What do you do?Ans:Dockerfile:FROM nginx:alpineCOPY ./static-html/ /usr/share/nginx/htmlBuild & run:docker build -t custom-nginx .docker run -d -p 8080:80 custom-nginxScenario based Questions:1. You have two applications — a Node.js backend and a Python script that handles scheduled jobs. You're considering running both inside the same container. Should you run multiple applications in the same Docker container?Ans:Best practice: No.Each container should run one process/service → makes scaling, logging, debugging easier.Solution: Run Node.js and Python in separate containers and connect them (via Docker Compose or networking).2. You have a Flask API and an Nginx server. You want to run both containers on the same host and expose them on ports 5000 and 80 respectively. How can you expose both applications from different containers?Ans:services:  flask:    build: ./flask-api    ports:      - "5000:5000"  nginx:    image: nginx:alpine    ports:      - "80:80"Now http://localhost:5000 → Flask, http://localhost:80 → Nginx.3. You want to run a React frontend, an Express.js backend and MongoDB – all together.How do you run and manage all three together?Ans:👉 Run all with docker-compose up -d.4. You try to run two containers that both expose port 8080 on the host.What happens, and how can you run both apps?Ans:Error: Port conflict (only one container can bind host port 8080).✅ Fix: Map one to a different host portdocker run -d -p 8080:8080 app1docker run -d -p 8081:8080 app25. You updated some code and want to restart your frontend, backend, and DB containers quickly. What is the easiest way to restart all services?Ans:docker-compose restart6. Your frontend has a new release, but you don’t want to restart the backend or DB.How can you update and rebuild only the frontend container?Ans:docker-compose build frontenddocker-compose up -d frontend7. Tomcat is listening on port 8080, but you get a "Connection Refused" error in the browser. Why?Ans:Common causes:App inside container is listening on 127.0.0.1 instead of 0.0.0.0.Port not published (forgot -p 8080:8080).Container not running (docker ps to check).8. You're not sure which container is using port 3000. How do you check?Ans:docker ps --filter "publish=3000"9. How do you stop and clean up your running Tomcat container and image?Ans:docker stop tomcat_containerdocker rm tomcat_containerdocker rmi tomcat:9.010.You want to share your app with a teammate. What do you do with the Docker image?docker save -o myapp.tar myapp:1.010.Scenario-Based Questions:1.If my error is about:Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile[ERROR] -> [Help 1][ERROR] To see the full stack trace of the errors, re-run Maven with the -X switch.How can I resolve it using maven terminal?Ans:Run with debug:mvn clean compile -XCheck your pom.xml for correct maven-compiler-plugin version and JDK target:<plugin>  <groupId>org.apache.maven.plugins</groupId>  <artifactId>maven-compiler-plugin</artifactId>  <version>3.8.1</version>  <configuration>    <source>1.8</source>    <target>1.8</target>  </configuration></plugin>Ensure Java version installed matches.2.A dependency you added is not recognized by the compiler. What steps would you take to confirm it is available in .m2 and listed in dependency tree?Ans:Check if it exists in local repo:ls ~/.m2/repository/groupId/artifactId/version/View dependency tree:mvn dependency:treeIf missing, run:mvn dependency:resolve3.A teammate sends a .patch file for a bug fix. How would you apply it and include it in your Maven build?Apply patch:git apply fix-bug.patchVerify code compiles:mvn clean install4.You have multiple JUnit test failures and want to rerun only failed tests. How would you approach this?Ans:mvn -Dsurefire.rerunFailingTestsCount=1 test5.Your Maven build fails due to “Unsupported class version error.” What plugin and configuration would you review?Ans:This means JDK mismatch.Check maven-compiler-plugin <source> and <target> versions.Example fix for Java 17:<configuration>  <source>17</source>  <target>17</target></configuration>6.You need to change your Java application from a WAR to a standalone JAR. What pom.xml changes are needed?Ans:In pom.xml, change:<packaging>jar</packaging>7.You are required to change the default build output directory from target/ to build_output/. How would you configure it?Ans:<build>  <directory>build_output</directory></build>8.You want to skip tests during the Maven build. What command would you use?Ans:mvn clean install -DskipTests9.How would you generate a site report (with test coverage, dependency analysis) for a Maven project?Ans: mvn site10.How do you build a Java project using Maven, and what files are generated in the target/ folder after running mvn clean install?Ans:mvn clean install11.How does Maven resolve dependency conflicts when two libraries use different versions of the same dependency, and how can you view and manage the dependency tree?Ans:mvn dependency:tree -Dverbose12.How do you write and run a JUnit test in a Maven project, and where are the compiled test classes and reports stored after running mvntest?Ans:mvn test14.How do you install and use a custom third-party JAR file in your Maven project, and how can you confirm it’s included in the build and classpath?Ans: mvn install:install-file -Dfile=lib/custom.jar -DgroupId=com.example -DartifactId=custom -Dversion=1.0 -Dpackaging=jar15.How do you create a Maven web project that packages into a WAR file, and what is the standard folder structure for such a project?<packaging>war</packaging>16.What command do you use to build a WAR file in Maven, where is it generated, and how can you deploy it to a server like Apache Tomcat?Ans:mvn clean package19.How do you configure a Maven web project, and how does its packaging and execution differ from a traditional WAR-based application?Ans:Web projects → package as WARRun on a servlet container (Tomcat, Jetty)Traditional JAR apps → run standalone with java -jar.services:  webapp:    image: hnss07/selabtest:latest   # <-- use your actual Docker Hub image    container_name: webapp    ports:      - "8080:8080"    depends_on:      - db    environment:      DB_HOST: db      DB_PORT: 3306      DB_USER: root      DB_PASSWORD: rootpassword    restart: always  db:    image: mysql:8.0    container_name: mysqldb    ports:      - "3306:3306"    environment:      MYSQL_ROOT_PASSWORD: rootpassword      MYSQL_DATABASE: mydb    volumes:      - db_data:/var/lib/mysql    restart: alwaysvolumes:  db_data:services:webapp:image: hnss07/selabtest:latest   # <-- use your actual Docker Hub imagecontainer_name: webappports:- "8080:8080"depends_on:- dbenvironment:DB_HOST: dbDB_PORT: 3306DB_USER: rootDB_PASSWORD: rootpasswordrestart: alwaysdb:image: mysql:8.0container_name: mysqldbports:- "3306:3306"environment:MYSQL_ROOT_PASSWORD: rootpasswordMYSQL_DATABASE: mydbvolumes:- db_data:/var/lib/mysqlrestart: alwaysvolumes:db_data: